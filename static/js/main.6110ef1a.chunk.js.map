{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","event","Details","setState","prevState","date","Date","toString","slice","this","props","location","summary","description","start","end","className","convertDate","dateTime","timeFromDate","timeZone","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChange","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","inputValue","updateEventCount","e","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","href","startsWith","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","currentLocation","locationEvents","eventCount","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.6110ef1a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showMore: false,\r\n    event: {},\r\n  }\r\n\r\nDetails = () => {\r\n  this.setState((prevState) => ({\r\n     showMore: !prevState.showMore\r\n  }));\r\n}\r\n\r\nconvertDate(date) {\r\n  const newDate = new Date(date).toString().slice(3, 21);\r\n  return newDate;\r\n}\r\n\r\ntimeFromDate(date) {\r\n  const newDate = new Date(date).toString().slice(15, 21);\r\n  return newDate;\r\n}\r\n\r\n  render() {\r\n    const { event: { location, summary, description, start, end }} = this.props;\r\n    return (\r\n      <div className=\"event\">\r\n        <ul>\r\n          <li className=\"location\">{location}</li>\r\n          <li className=\"summary\">{summary}</li>\r\n          <li className=\"date\">\r\n            {this.convertDate(start.dateTime) + ' -' + this.timeFromDate(end.dateTime)}\r\n          </li>\r\n          <li>{}</li>\r\n          <li className=\"timezone\">{start.timeZone} timezone</li>\r\n          {this.state.showMore === true && (\r\n            <p className=\"description\">{description}\r\n              <button className=\"lessDetails details-btn\" onClick={() => this.Details()}>Less details</button>   \r\n            </p>\r\n          )}\r\n          {this.state.showMore === false && (\r\n            <button className=\"moreDetails details-btn\" onClick={() => this.Details()}>More details</button>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from \"react\";\r\n\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event => \r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from \"react\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],    \r\n    showSuggestions: undefined,\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({ \r\n      query: value,\r\n      suggestions, \r\n    });\r\n  }\r\n  \r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\" \r\n          placeholder=\"Search ...\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChange}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" \r\n            style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion}\r\n                onClick={() => this.handleItemClicked(suggestion)}\r\n                >{suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 8,\r\n  }\r\n\r\n  inputValue = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      numberOfEvents: value,\r\n    });\r\n    this.props.updateEventCount(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"number-of-events\">\r\n        <p>Number of events</p>\r\n        <input \r\n          type=\"number\"\r\n          className=\"eventNumber\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={(e) => this.inputValue(e)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n];\r\n\r\nexport { mockData };","import { mockData } from \"./mock-data\";\r\nimport { NProgress } from \"nprogress\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nconst extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n    \r\n\r\n  //error: cannot read property 'start' of undefined - if isn't commented out \r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    \r\n     return mockData;\r\n   }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://6gsa36bt1l.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    \r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if(!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if(!code) {\r\n      const results = await axios.get(\r\n        \"https://6gsa36bt1l.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://6gsa36bt1l.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n  .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\n\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n\r\n state = {\r\n   events: [],\r\n   locations: [],\r\n   numberOfEvents: 8,\r\n   currentLocation: undefined\r\n }\r\n\r\n componentDidMount() {\r\n  this.mounted = true;\r\n  getEvents().then((events) => {\r\n    if (this.mounted) {\r\n    this.setState({ events: events.slice(0, this.state.numberOfEvents),\r\n                    locations: extractLocations(events) });\r\n     }\r\n   });\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  this.mounted = false;\r\n}\r\n\r\n updateEvents = (location) => {\r\n   getEvents().then((events) => {\r\n     const locationEvents = (location === 'all') ? \r\n     events\r\n     : \r\n    events.filter((event) => event.location === location);\r\n    const { numberOfEvents } = this.state;\r\n     this.setState({\r\n       events: locationEvents.slice(0, numberOfEvents)\r\n     });\r\n   });\r\n }\r\n\r\n updateEventCount = (eventCount) => {\r\n   const { currentLocation } = this.state;\r\n   this.setState({\r\n     numberOfEvents: eventCount\r\n   });\r\n   this.updateEvents(currentLocation, eventCount);\r\n };\r\n\r\n  render() {\r\n    const { numberOfEvents, locations, events } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\r\n        <EventList events={events}/>\r\n        <NumberOfEvents numberOfEvents={numberOfEvents} updateEventCount={this.updateEventCount}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}